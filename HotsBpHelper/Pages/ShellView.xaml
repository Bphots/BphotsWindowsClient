<Window x:Class="HotsBpHelper.Pages.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HotsBpHelper.Pages"
        lex:ResxLocalizationProvider.DefaultAssembly="HotsBpHelper"
        lex:ResxLocalizationProvider.DefaultDictionary="Strings"
        WindowState="Minimized"
        Visibility="Hidden"
        ShowInTaskbar="False"
        mc:Ignorable="d"
        Title="{lex:Loc HotsBpHelper}" Height="0" Width="0"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:s="https://github.com/canton7/Stylet"
        xmlns:converters="clr-namespace:HotsBpHelper.WPF.Converters"
        d:DataContext="{d:DesignInstance local:ShellViewModel}"
        >
    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:BoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" TrueValue="Collapsed" FalseValue="Visible"/>
    </Window.Resources>
    <tb:TaskbarIcon IconSource="/Images/icon.ico" ToolTipText="{lex:Loc HotsBpHelper}">
      <tb:TaskbarIcon.ContextMenu>
            <ContextMenu>
                <MenuItem Header="{Binding PercentageInfo}" IsEnabled="False" Visibility="{Binding IsLoaded, Converter={StaticResource InverseBoolToVisibilityConverter} }"></MenuItem>

                <MenuItem Header="{Binding UploadStatusDescription}" Command="{s:Action ShowReplays}" IsEnabled="{Binding CanShowReplays}" Visibility="{Binding IsLoaded, Converter={StaticResource BoolToVisibilityConverter} }"></MenuItem>
                <MenuItem Header="{Binding SwitchUploadDescription}" Command="{s:Action SwitchUpload}" Visibility="{Binding IsLoaded, Converter={StaticResource BoolToVisibilityConverter} }" />

                <Separator  Visibility="{Binding IsLoaded, Converter={StaticResource BoolToVisibilityConverter} }" />

                <MenuItem Header="{lex:Loc AutoShowHideHelper}" IsCheckable="True" IsChecked="{Binding AutoShowHideHelper}"  InputGestureText="{Binding AutoShowHideHelperInputGestureText}" Visibility="{Binding IsLoaded, Converter={StaticResource BoolToVisibilityConverter} }" />
                <MenuItem Header="{lex:Loc AutoDetectHeroAndMap}" IsCheckable="True" IsChecked="{Binding AutoDetect}" IsEnabled="{Binding CanOcr}"  InputGestureText="Ctrl+Shift+R"  Visibility="{Binding IsLoaded, Converter={StaticResource BoolToVisibilityConverter} }" />
                <MenuItem Header="{lex:Loc AutoShowMMR}" IsCheckable="True" IsChecked="{Binding AutoShowMmr}" Visibility="{Binding IsLoaded, Converter={StaticResource BoolToVisibilityConverter} }"/>
                
                <Separator  Visibility="{Binding IsLoaded, Converter={StaticResource BoolToVisibilityConverter} }" />

                <MenuItem Header="{Binding ShowHideHelperTip}" Command="{s:Action ManuallyShowHideHelper}" InputGestureText="{Binding ManualShowHideHelperInputGuestrueText}"  Visibility="{Binding CanManualShowHelper, Converter={StaticResource BoolToVisibilityConverter} }" />
                <MenuItem Header="{lex:Loc ResetHelper}" Command="{s:Action ResetHelper}" InputGestureText="Ctrl+Shift+N" Visibility="{Binding IsLoaded, Converter={StaticResource BoolToVisibilityConverter} }" />
                <MenuItem Header="{lex:Loc ShowMmr}" Command="{s:Action ShowMmr}" InputGestureText="Ctrl+Shift+M" Visibility="{Binding IsStatsVisible, Converter={StaticResource BoolToVisibilityConverter} }" />

                <Separator />

                <MenuItem Header="{lex:Loc Settings}" Command="{s:Action ShowSettings}" IsEnabled="{Binding CanShowSettings}" Visibility="{Binding IsLoaded, Converter={StaticResource BoolToVisibilityConverter} }"/>
                <MenuItem Header="{lex:Loc AutoStart}" Command="{s:Action SetAutoStart}" Visibility="{Binding ServiceNotRunning, Converter={StaticResource BoolToVisibilityConverter} }"/>
                <MenuItem Header="{lex:Loc AutoStop}" Command="{s:Action StopService}" Visibility="{Binding IsServiceRunning, Converter={StaticResource BoolToVisibilityConverter} }"/>
                <MenuItem Header="{lex:Loc About}" Command="{s:Action ShowAbout}" IsEnabled="{Binding CanAbout}" Visibility="{Binding IsLoaded, Converter={StaticResource BoolToVisibilityConverter} }"/>
                <MenuItem Header="{lex:Loc Exit}" Command="{s:Action Exit}" />
            </ContextMenu>
        </tb:TaskbarIcon.ContextMenu>
    </tb:TaskbarIcon>
</Window>
